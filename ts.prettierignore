# =========================================================
# üñå Full-Stack Project .prettierignore (React + Node + Express + MongoDB + pnpm + TypeScript + Mongoose + Tailwind CSS)
# =========================================================
# üìå Description:
# This .prettierignore file is designed for a **modern full-stack TypeScript project**.
#
# It covers:
# - Frontend: React + TypeScript + Tailwind CSS + Vite / Next.js
# - Backend: Node.js + Express + MongoDB + Mongoose
# - Package Manager: pnpm
#
# ‚ö†Ô∏è IMPORTANT:
# This file is specifically for **TypeScript-based projects**.
# Do NOT use in pure Javascript Project 
# (Because ‚Äî it ignores `.d.ts` and `.ts`-related build files)
#
# üßæ Purpose:
# - Prevent Prettier from formatting build outputs, caches, environment files, and generated assets.
# - Ensure only actual source code (TS, JSX/TSX, CSS, etc.) is formatted.
# - Maintain consistency, prevent accidental formatting of generated or sensitive files.
#
# üí° Usage:
# - Place this file at the root of your project.
# - Prettier will automatically ignore everything listed below.
#
# Author: Yash Mishra
# GitHub: https://github.com/YashMishra0101/fullstack-ignore-templates
# =========================================================


# ---------------------------------------------------------
# üß† VSCode and IDE
# ---------------------------------------------------------
.vscode
.idea
*.sublime-project
*.sublime-workspace


# ---------------------------------------------------------
# ‚öôÔ∏è Node.js & pnpm
# ---------------------------------------------------------
node_modules/
.pnpm/
pnpm-lock.yaml
pnpm-workspace.yaml
.pnpmfile.cjs
.pnpm-debug.log
.pnpm-cache/


# ---------------------------------------------------------
# üîí Environment & Secrets
# ---------------------------------------------------------
.env
*.env
.env.*
.env.local
.env.development.local
.env.production.local
.env.test.local


# ---------------------------------------------------------
# üèóÔ∏è Build / Output / Generated Files
# ---------------------------------------------------------
dist/
build/
.out/
.output/
.tmp/
.temp/
.cache/
coverage/
lib-cov/

*.js.map
*.css.map
*.d.ts
*.min.css
*.tgz
*.zip
*.rar
*.tar
*.gz


# ---------------------------------------------------------
# üé® Tailwind / PostCSS Caches
# ---------------------------------------------------------
.tailwind-cache/
.postcss-cache/
.stylelintcache

tailwind.config.js.timestamp*
tailwind.config.cjs.timestamp*
tailwind.config.ts.timestamp*

.postcssrc.json
.postcssrc.js
.postcssrc.cjs


# ---------------------------------------------------------
# ‚öõÔ∏è React / Vite / Next / Nuxt / Svelte
# ---------------------------------------------------------
.vite/
.next/
.nuxt/
.svelte-kit/
vite.config.ts.timestamp*


# ---------------------------------------------------------
# üßπ Miscellaneous / Temporary / System Files
# ---------------------------------------------------------
*.log
*.tmp
*.bak
*~
*.swp
.DS_Store
Thumbs.db

tmp/
temp/
pids/
*.pid
*.seed
*.pid.lock
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json


# ---------------------------------------------------------
# üóÉÔ∏è MongoDB Dumps / Database Files
# ---------------------------------------------------------
dump/
*.bson
*.lock
data/
db/


# ---------------------------------------------------------
# ‚öíÔ∏è Optional Build Tools
# ---------------------------------------------------------
.grunt/
.fusebox/
.gulp/
.dynamodb/
.tern-port/


# ---------------------------------------------------------
# ‚òÅÔ∏è Serverless / Docs / Static Site Outputs
# ---------------------------------------------------------
.serverless/
.vuepress/dist
.docusaurus/
.storybook/
public/static/

sw.js
sw.js.map
service-worker.js


# =========================================================
# ‚úÖ End of Prettier Ignore (TypeScript)
# =========================================================
